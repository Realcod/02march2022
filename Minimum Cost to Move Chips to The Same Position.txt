/*
We have n chips, where the position of the ith chip is position[i].
We need to move all the chips to the same position. In one step, we can change the position of the ith chip from position[i] to:
    position[i] + 2 or position[i] - 2 with cost = 0.
    position[i] + 1 or position[i] - 1 with cost = 1.
Return the minimum cost needed to move all the chips to the same position.
*/

#include<iostream>
using namespace std;

int minimumcost(int arr[],int n){
	int odd=0,even=0;
	for(int i=0;i<n;i++){
		if(arr[i]%2==0)
			even++;
		else
			odd++;
	}
	if(odd<even)
	   return odd;
	else
	   return even;
}

int main(){
	int n,arr[100];
	cout<<"Enter the size of the array"<<endl;
	cin>>n;
	
	cout<<"Enter the position in array"<<endl;
	for(int i=0;i<n;i++){
		cin>>arr[i];
	}
	
	int mincost=minimumcost(arr,n);
	cout<<mincost;
}